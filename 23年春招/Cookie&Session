# 实现会话跟踪技术有哪些
**1.cookie**<br>
优点：数据可以持久保存，不需要服务器资源，简单，基于键值对存储<br>
缺点：存储有大小限制，用户可以禁止cookie，保存在本地有安全风险

**2.重写url**<br>
优点：在cookie禁止后可以使用<br>
缺点：必须对网站的url进行编码，网页需要动态生成，不能使用预先记录的url

**3.隐藏表单域**<br>
优点：在cookie禁止后可以使用<br>
缺点：所有页面必须是表单提交后的结果

**4.HttpSession**<br>
当用户第一次访问网站会自动创建HttpSession,每个用户可以访问自己的HttpSession,
通过HttpSession的getSession()方法可以获取session;通过HttpSesion的setAttribute()方法将一个值放入session中;
通过getAttribute(),同时传入属性名可以获取存在session中的对象.

session存在服务器中,所以我们存储的对象尽量不要太大,避免影响服务器的性能.

其次我们存入的对象尽量继承Serializable接口,这样servlet在必要的时候可以将其序列化到文件中,否则在序列化时就会出现异常

# Cookie和Session的区别
cookie和session都是用来跟踪浏览器用户身份的会话方式,但他俩的应用场景不同.

Cookie场景:一般用来保存用户信息
* 在cookie保存已登录过的用户信息,下次访问网站时自动填写帮你登录的基本信息.
* 在用户登录时将token存放在cookie中,下次登录时只需要根据token值来查找用户即可,实现下次登录的自动登录.
* 登录一次网站后访问其它页面不需要重新登录.

Session场景:通过服务端记录用户状态
* 典型场景是购物车,当你添加商品到购物车中,系统不知道是哪个用户操作的.服务端给特定的用户创建特定的session,
用来标识这个用户且可以跟踪这个用户

Cookie存储在客户端,Session存储到服务端
相对来说Session的安全性高一些,不要用Cookie存储敏感信息,或者在存信息前进行加密操作,使用到的时候再去服务端解密
